{"ast":null,"code":"var _jsxFileName = \"/Users/brijenpatel/Desktop/esso/src/TillForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TillDisplay from './TillDisplay';\nimport './TillForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TillForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    date: '',\n    cash: {\n      100: '',\n      50: '',\n      20: '',\n      10: '',\n      5: '',\n      2: '',\n      1: ''\n    },\n    cent: {\n      25: '',\n      10: '',\n      5: ''\n    }\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const [section, denomination] = name.split('.');\n    const inputValue = value.trim(); // Remove leading and trailing spaces\n\n    if (section === 'cash') {\n      setFormData(prevState => ({\n        ...prevState,\n        cash: {\n          ...prevState.cash,\n          [denomination]: inputValue\n        }\n      }));\n    } else if (section === 'cent') {\n      setFormData(prevState => ({\n        ...prevState,\n        cent: {\n          ...prevState.cent,\n          [denomination]: inputValue\n        }\n      }));\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n    TillDisplay(); // Log form data\n  };\n  const calculateTotal = () => {\n    let total = 0;\n    for (const denomination in formData.cash) {\n      const quantity = parseFloat(formData.cash[denomination]) || 0; // Convert to number or default to 0\n      total += denomination * quantity;\n    }\n    return total.toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily Closing Tills Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [Object.entries(formData.cash).map(([denomination, quantity]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: `$${denomination}:`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: `cash.${denomination}`,\n            value: quantity === '' ? '' : parseFloat(quantity) // Set value to empty string if quantity is empty\n            ,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", (denomination * (parseFloat(quantity) || 0)).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, denomination, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Cents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), Object.entries(formData.cent).map(([denomination, quantity]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: `$${denomination}:`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: `cent.${denomination}`,\n            value: quantity === '' ? '' : parseFloat(quantity) // Set value to empty string if quantity is empty\n            ,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", (denomination * quantity / 100).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 10\n          }, this)]\n        }, denomination, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Cash In: $\", calculateTotal()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(TillForm, \"ejEKfnokuQMNLBU+fUMFKiv/EdA=\");\n_c = TillForm;\nexport default TillForm;\nvar _c;\n$RefreshReg$(_c, \"TillForm\");","map":{"version":3,"names":["React","useState","TillDisplay","jsxDEV","_jsxDEV","TillForm","_s","formData","setFormData","name","date","cash","cent","handleChange","e","value","target","section","denomination","split","inputValue","trim","prevState","handleSubmit","preventDefault","console","log","calculateTotal","total","quantity","parseFloat","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","entries","map","type","onChange","_c","$RefreshReg$"],"sources":["/Users/brijenpatel/Desktop/esso/src/TillForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TillDisplay from './TillDisplay';\nimport './TillForm.css';\n\nfunction TillForm() {\n  const [formData, setFormData] = useState({\n    name: '',\n    date: '',\n    cash: {\n      100: '',\n      50: '',\n      20: '',\n      10: '',\n      5: '',\n      2: '',\n      1: '',\n    },\n    cent:{\n        25: '',\n        10: '',\n        5: ''\n    }\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const [section, denomination] = name.split('.');\n    const inputValue = value.trim(); // Remove leading and trailing spaces\n    \n    if (section === 'cash') {\n      setFormData(prevState => ({\n        ...prevState,\n        cash: {\n          ...prevState.cash,\n          [denomination]: inputValue\n        }\n      }));\n    } else if (section === 'cent') {\n      setFormData(prevState => ({\n        ...prevState,\n        cent: {\n          ...prevState.cent,\n          [denomination]: inputValue\n        }\n      }));\n    }\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(formData); \n    TillDisplay()// Log form data\n  };\n\n  const calculateTotal = () => {\n    let total = 0;\n    for (const denomination in formData.cash) {\n      const quantity = parseFloat(formData.cash[denomination]) || 0; // Convert to number or default to 0\n      total += denomination * quantity;\n    }\n    return total.toFixed(2);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Daily Closing Tills Form</h2>\n      <form onSubmit={handleSubmit} className=\"form-grid\">\n        <div className=\"form-section\">\n          {Object.entries(formData.cash).map(([denomination, quantity]) => (\n            <div key={denomination} className=\"form-row\">\n              <label>{`$${denomination}:`}</label>\n              <input\n                type=\"number\"\n                name={`cash.${denomination}`}\n                value={quantity === '' ? '' : parseFloat(quantity)} // Set value to empty string if quantity is empty\n                onChange={handleChange}\n              />\n              <span>${(denomination * (parseFloat(quantity) || 0)).toFixed(2)}</span>\n            </div>\n          ))}\n          <br/>\n\n        <label>Cents</label>\n          {Object.entries(formData.cent).map(([denomination, quantity]) => (\n            <div key={denomination} className=\"form-row\">\n              <label>{`$${denomination}:`}</label>\n              <input\n                type=\"number\"\n                name={`cent.${denomination}`}\n                value={quantity === '' ? '' : parseFloat(quantity)} // Set value to empty string if quantity is empty\n                onChange={handleChange}\n              />\n         <span>${(denomination * quantity / 100).toFixed(2)}</span>\n            </div>\n          ))}\n          </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div className=\"total\">\n        <p>Total Cash In: ${calculateTotal()}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default TillForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE;MACJ,GAAG,EAAE,EAAE;MACP,EAAE,EAAE,EAAE;MACN,EAAE,EAAE,EAAE;MACN,EAAE,EAAE,EAAE;MACN,CAAC,EAAE,EAAE;MACL,CAAC,EAAE,EAAE;MACL,CAAC,EAAE;IACL,CAAC;IACDC,IAAI,EAAC;MACD,EAAE,EAAE,EAAE;MACN,EAAE,EAAE,EAAE;MACN,CAAC,EAAE;IACP;EACF,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEL,IAAI;MAAEM;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC,MAAM,CAACC,OAAO,EAAEC,YAAY,CAAC,GAAGT,IAAI,CAACU,KAAK,CAAC,GAAG,CAAC;IAC/C,MAAMC,UAAU,GAAGL,KAAK,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;;IAEjC,IAAIJ,OAAO,KAAK,MAAM,EAAE;MACtBT,WAAW,CAACc,SAAS,KAAK;QACxB,GAAGA,SAAS;QACZX,IAAI,EAAE;UACJ,GAAGW,SAAS,CAACX,IAAI;UACjB,CAACO,YAAY,GAAGE;QAClB;MACF,CAAC,CAAC,CAAC;IACL,CAAC,MAAM,IAAIH,OAAO,KAAK,MAAM,EAAE;MAC7BT,WAAW,CAACc,SAAS,KAAK;QACxB,GAAGA,SAAS;QACZV,IAAI,EAAE;UACJ,GAAGU,SAAS,CAACV,IAAI;UACjB,CAACM,YAAY,GAAGE;QAClB;MACF,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMG,YAAY,GAAIT,CAAC,IAAK;IAC1BA,CAAC,CAACU,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACnB,QAAQ,CAAC;IACrBL,WAAW,CAAC,CAAC;EACf,CAAC;EAED,MAAMyB,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIC,KAAK,GAAG,CAAC;IACb,KAAK,MAAMV,YAAY,IAAIX,QAAQ,CAACI,IAAI,EAAE;MACxC,MAAMkB,QAAQ,GAAGC,UAAU,CAACvB,QAAQ,CAACI,IAAI,CAACO,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;MAC/DU,KAAK,IAAIV,YAAY,GAAGW,QAAQ;IAClC;IACA,OAAOD,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B7B,OAAA;MAAA6B,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCjC,OAAA;MAAMkC,QAAQ,EAAEf,YAAa;MAACS,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACjD7B,OAAA;QAAK4B,SAAS,EAAC,cAAc;QAAAC,QAAA,GAC1BM,MAAM,CAACC,OAAO,CAACjC,QAAQ,CAACI,IAAI,CAAC,CAAC8B,GAAG,CAAC,CAAC,CAACvB,YAAY,EAAEW,QAAQ,CAAC,kBAC1DzB,OAAA;UAAwB4B,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAC1C7B,OAAA;YAAA6B,QAAA,EAAS,IAAGf,YAAa;UAAE;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpCjC,OAAA;YACEsC,IAAI,EAAC,QAAQ;YACbjC,IAAI,EAAG,QAAOS,YAAa,EAAE;YAC7BH,KAAK,EAAEc,QAAQ,KAAK,EAAE,GAAG,EAAE,GAAGC,UAAU,CAACD,QAAQ,CAAE,CAAC;YAAA;YACpDc,QAAQ,EAAE9B;UAAa;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACFjC,OAAA;YAAA6B,QAAA,GAAM,GAAC,EAAC,CAACf,YAAY,IAAIY,UAAU,CAACD,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAR/DnB,YAAY;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASjB,CACN,CAAC,eACFjC,OAAA;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEPjC,OAAA;UAAA6B,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACjBE,MAAM,CAACC,OAAO,CAACjC,QAAQ,CAACK,IAAI,CAAC,CAAC6B,GAAG,CAAC,CAAC,CAACvB,YAAY,EAAEW,QAAQ,CAAC,kBAC1DzB,OAAA;UAAwB4B,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAC1C7B,OAAA;YAAA6B,QAAA,EAAS,IAAGf,YAAa;UAAE;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpCjC,OAAA;YACEsC,IAAI,EAAC,QAAQ;YACbjC,IAAI,EAAG,QAAOS,YAAa,EAAE;YAC7BH,KAAK,EAAEc,QAAQ,KAAK,EAAE,GAAG,EAAE,GAAGC,UAAU,CAACD,QAAQ,CAAE,CAAC;YAAA;YACpDc,QAAQ,EAAE9B;UAAa;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACPjC,OAAA;YAAA6B,QAAA,GAAM,GAAC,EAAC,CAACf,YAAY,GAAGW,QAAQ,GAAG,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAR7CnB,YAAY;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASjB,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRjC,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACPjC,OAAA;MAAK4B,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpB7B,OAAA;QAAA6B,QAAA,GAAG,kBAAgB,EAACN,cAAc,CAAC,CAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/B,EAAA,CAnGQD,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AAqGjB,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}